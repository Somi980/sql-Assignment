Question 1: 

Retrieve the total number of rentals made in the Sakila database.
select count(*) from rental;

Question 2: 

Find the average rental duration (in days) of movies rented from the Sakila database.
select avg(rental_duration) from film;

Question 3: 

Display the first name and last name of customers in uppercase.
select upper(first_name),upper(last_name) from customer;

Question 4: 

Extract the month from the rental date and display it alongside the rental ID.
select rental_id,extract(month from rental_date) from rental;

Question 5: 

Retrieve the count of rentals for each customer (display customer ID and the count of rentals).
select count(rental_id) from rental group by customer_id;

Question 6: 

Find the total revenue generated by each store. 
SELECT 
    s.store_id,
    CONCAT(a.first_name, ' ', a.last_name) AS manager_name,
    SUM(p.amount) AS total_revenue
FROM 
    payment p
INNER JOIN 
    rental r ON p.rental_id = r.rental_id
INNER JOIN 
    inventory i ON r.inventory_id = i.inventory_id
INNER JOIN 
    store s ON i.store_id = s.store_id
INNER JOIN 
    staff a ON s.manager_staff_id = a.staff_id
GROUP BY 
    s.store_id, manager_name
ORDER BY 
    s.store_id;


Question no 7

Display the title of the movie, customers first name, and last name who rented it.
SELECT 
    f.title AS movie_title,
    c.first_name,
    c.last_name
FROM 
    film f
INNER JOIN 
    inventory i ON f.film_id = i.film_id
INNER JOIN 
    rental r ON i.inventory_id = r.inventory_id
INNER JOIN 
    customer c ON r.customer_id = c.customer_id;

Question 8: 

Retrieve the names of all actors who have appeared in the film "Gone with the Wind."
SELECT 
    a.first_name,
    a.last_name
FROM 
    actor a
INNER JOIN 
    film_actor fa ON a.actor_id = fa.actor_id
INNER JOIN 
    film f ON fa.film_id = f.film_id
WHERE 
    f.title = 'Gone with the Wind';
    
    
    Question 9: 

Determine the total number of rentals for each category of movies.
SELECT 
    c.name AS category_name,
    COUNT(*) AS total_rentals
FROM 
    category c
JOIN 
    film_category fc ON c.category_id = fc.category_id
JOIN 
    film f ON fc.film_id = f.film_id
JOIN 
    inventory i ON f.film_id = i.film_id
JOIN 
    rental r ON i.inventory_id = r.inventory_id
GROUP BY 
    c.category_id
ORDER BY 
    total_rentals DESC;


Question 10: 

Find the average rental rate of movies in each language.
 select avg(rental_rate) from film group by language_id;
 
 Question 11: 

Retrieve the customer names along with the total amount they have spent on rentals.

select concat(c.first_name,c.last_name),sum(p.amount) from 
  customer c  left join rental r 
  on r.customer_id = c.customer_id  left join payment p
  on p.rental_id = r.rental_id group by c.customer_id; 
  
  
  Question 12: 

List the titles of movies rented by each customer in a particular city (e.g., 'London').
SELECT 
    CONCAT(c.first_name, ' ', c.last_name) AS customer_name,
    f.title AS movie_title
FROM 
    customer c
JOIN 
    rental r ON c.customer_id = r.customer_id
JOIN 
    inventory i ON r.inventory_id = i.inventory_id
JOIN 
    film f ON i.film_id = f.film_id
JOIN 
    address a ON c.address_id = a.address_id
JOIN 
    city ct ON a.city_id = ct.city_id
WHERE 
    ct.city = 'London'
ORDER BY 
    customer_name;


Question 13: 

Display the top 5 rented movies along with the number of times they have been rented. 
 select title,count(r.rental_id) as number_of_rental from rental r  
  join inventory i on i.inventory_id =r.inventory_id  
join film f on f.film_id = i.inventory_id  group by f.film_id  order by number_of_rental Desc limit 5;  


Question 14: 

Determine the customers who have rented movies from both stores (store ID 1 and store ID 2).
SELECT 
    c.customer_id,
    CONCAT(c.first_name, ' ', c.last_name) AS customer_name
FROM 
    customer c
JOIN 
    rental r ON c.customer_id = r.customer_id
JOIN 
    inventory i ON r.inventory_id = i.inventory_id
WHERE 
    i.store_id IN (1, 2)
GROUP BY 
    c.customer_id
HAVING 
    COUNT(DISTINCT i.store_id) = 2;
 
